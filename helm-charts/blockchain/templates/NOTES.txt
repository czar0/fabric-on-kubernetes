1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range .Values.ingress.hosts }}
    http://{{ . }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
    export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "blockchain.fullname" . }})
    export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
    echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status by running 'kubectl get svc -w {{ template "blockchain.fullname" . }}'
    export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ template "blockchain.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
    echo http://$SERVICE_IP:{{ .Values.service.externalPort }}
{{- else if contains "ClusterIP" .Values.service.type }}
    export CA_POD=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app={{ template "blockchain.name" . }},release={{ .Release.Name }},name={{ template "blockchain.name" . }}-ca" -o jsonpath="{.items[0].metadata.name}")
    echo "Visit http://127.0.0.1:8080 to use your application"
    kubectl port-forward $CA_POD 8080:{{ .Values.service.externalPort }}
{{- end }}

2. Next, create a channel and have your peers join by running these commands:
    export PEER1ORG1_POD=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app={{ template "blockchain.name" . }},release={{ .Release.Name }},name={{ template "blockchain.name" . }}-org1peer1" -o jsonpath="{.items[0].metadata.name}")
    export PEER1ORG2_POD=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app={{ template "blockchain.name" . }},release={{ .Release.Name }},name={{ template "blockchain.name" . }}-org2peer1" -o jsonpath="{.items[0].metadata.name}")
   
    kubectl exec --namespace {{ .Release.Namespace }} $PEER1ORG1_POD -- peer channel create -o blockchain-orderer:31010 -c mychannel -f /shared/mychannel.tx
    kubectl exec --namespace {{ .Release.Namespace }} $PEER1ORG1_POD -- peer channel fetch config /shared/mychannel.block -c mychannel -o blockchain-orderer:31010

    kubectl exec --namespace {{ .Release.Namespace }} $PEER1ORG1_POD -- peer channel join -b /shared/mychannel.block
    kubectl exec --namespace {{ .Release.Namespace }} $PEER1ORG2_POD -- peer channel join -b /shared/mychannel.block