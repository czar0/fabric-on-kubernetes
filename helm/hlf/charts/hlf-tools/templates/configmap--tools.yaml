apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "hlf-tools.fullname" . }}--tools
  labels:
{{ include "labels.standard" . | indent 4 }}
data:
  GOPATH: /opt/gopath
  CORE_CHAINCODE_KEEPALIVE: "10"
  CORE_PEER_ID: {{ .Release.Name }}
#   CORE_PEER_NETWORKID: nid1
  # If we have an ingress, we set hostname to it
  CORE_PEER_ADDRESS: {{ .Values.peer.host }}:{{ .Values.peer.port }}
  CORE_PEER_LOCALMSPID: {{ .Values.peer.mspID | quote }}
  CORE_PEER_MSPCONFIGPATH: /var/hyperledger/msp
  ###########
  # Logging #
  ###########
  FABRIC_LOGGING_SPEC: DEBUG
  ##########
  # TLS    #
  ##########
  CORE_PEER_TLS_ENABLED: {{ .Values.peer.tls.server.enabled | quote }}
  CORE_PEER_TLS_CERT_FILE: "/var/hyperledger/tls/server/pair/tls.crt"
  CORE_PEER_TLS_KEY_FILE: "/var/hyperledger/tls/server/pair/tls.key"
  CORE_PEER_TLS_ROOTCERT_FILE: "/var/hyperledger/tls/server/cert/cacert.pem"
  CORE_PEER_TLS_CLIENTAUTHREQUIRED: {{ .Values.peer.tls.client.enabled | quote }}
  # This is fixed prior to starting the peer
  CORE_PEER_TLS_CLIENTROOTCAS_FILES: "/var/hyperledger/tls/client/cert/*"
  CORE_PEER_TLS_CLIENTCERT_FILE: "/var/hyperledger/tls/client/pair/tls.crt"
  CORE_PEER_TLS_CLIENTKEY_FILE: "/var/hyperledger/tls/client/pair/tls.key"
  CORE_VM_ENDPOINT: unix:///host/var/run/docker.sock
  ADMIN_MSP_PATH: /var/hyperledger/admin_msp
  ORD_TLS_PATH: /var/hyperledger/tls/ord/cert
  GODEBUG: "netdns=go"
